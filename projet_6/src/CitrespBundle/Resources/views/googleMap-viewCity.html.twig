{# src/CitrespBundle/Resources/views/googleMap-viewCity.html.twig #}

<script>
  var map;

  function initMap() {
    var city = {
      lat: {{ city.gpsLat }},
      lng: {{ city.gpsLng }}
    };

    var bounds = new google.maps.LatLngBounds();

    map = new google.maps.Map(document.getElementById('map'), {
      zoom: 15,
      center: city,
      streetViewControl: false,
      mapTypeControl: false,
      panControl: false
    });
   
   

    var data = [];
    
    

    {% for reporting in reportings %} 
      data.push({
        id:'{{reporting.id}}',
        address: '{{reporting.address}}',
        category: '{{reporting.category.name}}',
        date: "{{ reporting.dateCreated|localizeddate('short', 'none', null) }}",
        lat: '{{ reporting.gpsLat }}',
        lng: '{{ reporting.gpsLng }}',
        status: '{{ reporting.status.id }}',
        link: "{{ path('show_reporting', {'slug': app.user.city.slug, 'reporting_id': reporting.id}) }}"
      });
    {% endfor %}


    data.forEach(function(element){ 
      var contentString = 
          '<div id="'+element.id+'">'+
            '<div id="siteNotice">'+
            '</div>'+
              '<h6 id="firstHeading" class="firstHeading">'+element.address+'</h6>'+
            '<div id="bodyContent">'+
              '<p><strong>'+element.category+'</strong><br>' + element.date+'</p>' +
              {# '<p><a href="'+element.link+'">Voir</a></p>'+ #}
            '</div>'+
          '</div>';

      var infowindow = new google.maps.InfoWindow({
        content: contentString
      });

      var img;
      if (element.status == 4 ){
        img = "{{asset('theme/img/markers/marker_green.png')}}"
      } else if (element.status == 3){
        img = "{{asset('theme/img/markers/marker_blue.png')}}"
      } else if (element.status == 2){
        img = "{{asset('theme/img/markers/marker_orange.png')}}"
      } else {
        img = "{{asset('theme/img/markers/marker_red.png')}}"
      }
      
      var marker = new google.maps.Marker({
        position: {
          lat: Number(element.lat),
          lng: Number(element.lng),          
        },
        icon: img,
        map: map
      });   
    

      marker.addListener('mouseover', function() {
        infowindow.open(map, marker);
      });

      marker.addListener('mouseout', function() {
        infowindow.close(map, marker);
      });

          
      bounds.extend(marker.position); 
    });

    {% if reportings is not empty %}
      map.fitBounds(bounds); 
    {% endif %}
    
    
      
      

  }
</script>

<script src="https://maps.googleapis.com/maps/api/js?key={{googleApi}}&callback=initMap" async="async" defer="defer"></script>
